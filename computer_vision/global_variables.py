import numpy as np

# Cropping
# VLH   (height,width)
lcrop = [[(270, 850), (120, 540)], [(270, 850), (120, 540)], [(270, 850), (120, 540)]]
rcrop = [[(150, 730), (650, 1070)], [(150, 730), (650, 1070)], [(150, 730), (650, 1070)]]

# Binary threshold
threshold = 0.35
# Dilation size
dilation_size = 2

# Projective
H = np.array([[1, 0, 0], [0, 1, 0], [0, 0, 1]])
# Rotation matrix and translation
# Use image_registration.find_image_transformation()
# right to left

# Chosen with choose_points left to right
A = np.array([[1.00346938, 0.01570419], [-0.01536945, 0.99532346]])
t = np.array([452.27628291, -31.33095023])
"""
A = np.array([[0.95967967, 0.00758962], [-0.01423037, 0.97860608]])
t = np.array([488, -25])

"""
# Transformation matrix between camera frame and base frame
T = np.array([[-1, 0, 0, 0], [0, 1, 0, -805], [0, 0, 1, 706]])

# Intrinsic and distortion parameters
K1 = np.array(
    [[2.0648e+03, 0, 1.0159e+03], [0, 2.1062e+03, 0.6910e+03], [0, 0, 1]])

K2 = np.array([[2.0275e+03, 0, 0.9750e+03], [0, 2.0603e+03, 0.7100e+03], [0, 0, 1]])
d1 = np.array([-0, 221393631732738, 0.750376123431885, 0, 0])
d2 = np.array([-0.133712338863969, -0.207332006439611, 0, 0])
R1 = np.array([[1, 0, 0], [0, 1, 0], [0, 0, 1]])
t1 = np.array([1, 0, 0])
R2 = np.array([[0.9920, 0.1026, 0.0735], [-0.1021, 0.9947, -0.0113], [-0.0742, 0.0037, 0.9972]])
t2 = np.array([566, 7.5, 10])
Kl = np.array([[1.27078247e+03, 0.00000000e+00, 9.88116508e+02],
               [0.00000000e+00, 1.29054528e+03, 5.55250191e+02],
               [0.00000000e+00, 0.00000000e+00, 1.00000000e+00]])
dl = np.array([-0.05048995, 0.04927021, 0.00162878, -0.00146632, -0.03910863])

Kr = np.array([[3.05404884e+03, 0.00000000e+00, 9.89104119e+02],
               [0.00000000e+00, 3.07486923e+03, 6.48427234e+02],
               [0.00000000e+00, 0.00000000e+00, 1.00000000e+00]])

dr = np.array([2.15853182e-01, -1.97622226e+01, -1.14807116e-02, -7.77297042e-03,
               2.52308929e+02])

P1 = np.array([[1.98156399e+03, 0.00000000e+00, 8.58268204e+02, 0.00000000e+00],
               [0.00000000e+00, 1.98156399e+03, 6.38653870e+02, 0.00000000e+00],
               [0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00]])

P2 = np.array([[1.98156399e+03, 0.00000000e+00, 8.58268204e+02, 1.12183870e+06],
               [0.00000000e+00, 1.98156399e+03, 6.38653870e+02, 0.00000000e+00],
               [0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00]])
